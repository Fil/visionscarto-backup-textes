
--------------------------

TITRE:
Suivi de colis

--------------------------

AUTEUR: 
- Philippe Rivière

--------------------------

CHAPO:
Visionscarto a acheté un serveur informatique. «Designed in California», mais le distributeur européen d'Apple est à Cork, en Irlande, et l'appareil est fabriqué en Chine. Quant à la livraison, nous disposons d’un numéro de suivi, et d’une page Web qui nous permet de savoir « en temps réel » où se trouve notre colis. C'est donc l'occasion de tenter un petit exercice cartographique... en ligne de commande.




--------------------------
TEXTE:

Pour cet exercice, nous avons choisi de tout programmer : récupération des données et géocodage, tout doit être automatisé à travers un script.

Voici le résultat, que nous détaillons plus bas.

<code>
#! /bin/bash
bon=$1
(
  echo "stage,time,place,lat,lon" &&
  (
    lynx -dump "http://www.tnt.fr/public/suivi_colis/recherche/visubontransport.do?bonTransport=$bon" \
       | sed 's/^\(.*\) \([0-9][0-9].[0-9][0-9].2014 ..:..\) \(.*\)/\1,\2,\3/' \
           2>/dev/null \
       | grep "/201[0-9] "
  ) \
  | while read i
  do
    j=`echo $i | awk -F, '{print $3}'`
    echo $i,`geotools --no-ansi geocoder:geocode "$j"`
  done
)
</code>
<p class="small text-right">([Télécharger->https://gist.github.com/Fil/7b9b67efe6244b4f1a26].)

En lançant cette commande dans le Terminal, on obtient, au format csv, la liste géocodée des étapes (liste à laquelle on rajoute l’Irlande et la Silicon Valley « à la main ») :

<code>
stage,time,place,lat,lon
Import reçu ,26/08/2014 10:23,Tours,47.394144, 0.68484
En cours d'acheminement,26/08/2014 07:03,Rennes,48.117266, -1.6777926
En cours d'acheminement,26/08/2014 03:46,Liege Euro Hub,50.6325574, 5.5796662
En cours d'acheminement,25/08/2014 21:56,Arnhem,51.9851034, 5.8987296
En cours d'acheminement,25/08/2014 20:23,Arnhem Hub,51.9851034, 5.8987296
En cours d'acheminement,25/08/2014 15:14,Arnhem Hub,51.9851034, 5.8987296
En cours d'acheminement,23/08/2014 10:02,Hong Kong,22.396428, 114.109497
En cours d'acheminement,22/08/2014 19:42,Shenzhen,22.543099, 114.057868
Distribution,-,Hollyhill Cork Ireland,51.91115, -8.59441
Conception,-,1 infinite Loop California,37.331741, -122.0303329
</code>

Il suffit alors de copier/coller cette liste dans un outil comme http://mapbox.github.io/csv2geojson/ pour obtenir rapidement une carte.

<https://farm4.staticflickr.com/3883/14894084927_1ca317e4b6_o_d.png size=original class=fullwidth>

Que voit-on ? La mondialisation à l’œuvre, puisque pas moins de six~pays sur trois~continents sont impliqués dans cette livraison. Un zoom sur Shenzhen (où se trouve l’entreprise Foxconn qui fabrique les machines) montre le passage du monde oriental au monde occidental, de Shenzhen à Hong Kong.

<https://farm4.staticflickr.com/3875/14894058138_78cc5ee1b1_o_d.png>

(Nous avons aussi expérimenté pour l’occasion le site storymap, qui permet de faire des cartes animées en téléchargeant un fichier csv de données géo- et time-codées ; cependant, comme [le résultat brut de décoffrage n’est guère satisfaisant->http://mapstory.org/maps/1855/].)
 
Autre leçon à tirer : avec les bons outils il est relativement aisé d’extraire de l’information pour la traiter et produire des cartes de façon automatique.

Pour aller au-delà, il faudrait refaire cette carte en indiquant la nature des étapes : en Californie, le design ; à Cork, la finance (et l’optimisation fiscale !) ; en Chine, la fabrication ;  ailleurs, le transport et la consommation. Chaque point a une « valeur » différente.

<p class="text-right caps">↬ Philippe Rivière.


<quote>

{{{Fonctionnement du script}}}

Le script est appelé depuis le Terminal par la commande:
<code>
./track.sh 787096848
</code>

Notre script commence par enregistrer dans la variable <code>$bon</code> le numéro de suivi du colis, passé en argument :
<code>
bon=$1
</code>

Affiche la ligne de description des champs du fichier CSV:
<code>
echo "stage,time,place,lat,lon"
</code>

Avec {lynx}, un navigateur en mode texte, le script se connecte sur la page web du transporteur avec ce numéro (L’option <code>-dump</code> de l’outil permet de récupérer la page web au format texte) :
<code>
lynx -dump "http://www.tnt.fr/public/suivi_colis/recherche/visubontransport.do?bonTransport=$bon"
</code>

Avec <code>sed</code> et <code>grep</code>, on extrait uniquement les lignes contenant l’information souhaitée :
<code>
| sed 's/^\(.*\) \([0-9][0-9].[0-9][0-9].2014 ..:..\) \(.*\)/\1,\2,\3/' \
   2>/dev/null \
| grep "/201[0-9] "
</code>

On envoie chacune de ces lignes dans un outil géocodeur (<code>geotools</code>), qui va récupérer les coordonnées (latitude, longitude) correspondant à chaque nom de lieu :
<code>
while read i
do
  j=`echo $i | awk -F, '{print $3}'`
  echo $i,`geotools --no-ansi geocoder:geocode "$j"`
done
</code>

Optionnellement, on peut ensuite ajouter une ligne pour convertir le résultat au format GeoJSON :
<code>
| csv2geojson
</code>

{À noter:} le script comporte plein de caractères spéciaux, parenthèses, pipes et backslashes -- <code>( ) | \\</code> --, qui forment la tuyauterie d'Unix ; magie de la ligne de commande, qui permet de créer en quelques instructions une chaîne complète de traitement de l'information.

<p class="small text-right">([Télécharger le script->https://gist.github.com/Fil/7b9b67efe6244b4f1a26].)

{{{Installation des outils}}}

L’installation de ces outils en ligne de commande n’est pas toujours simple ; sur Mac OS~X, il est recommandé d’utiliser Macbrew, ce qui permet souvent d’installer un outil en lançant la commande (par exemple) <code>brew install lynx</code>.

Pour <code>geotools</code>, nous avons eu quelques difficultés à l’installation : il a fallu passer par une installation sur Linux puis le recopier sur le Mac, ce qui n’est pas très aisé. À reproduire…

<code>csv2geojson</code> s’installe pour sa part via la commande <code>npm install -g csv2geojson</code>.

</quote>


<p class=small>#Apple #Foxconn #transport #brew #géocodage #geotools #geojson




--------------------------

PS: N'hésitez pas à nous écrire si vous avez des remarques ou des questions : [->contact@visionscarto.net]



--------------------------

LANG: fr




--------------------------
Visionscarto - version du 25 septembre 2016 15:28
